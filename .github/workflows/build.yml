name: Build and Verify Sketch Publication

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install GPG
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg2

      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent

      - name: Get and trust GPG key ID
        id: gpg
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          KEY_ID=$(gpg --list-secret-keys --with-colons | awk -F: '/^fpr:/ {print $10; exit}')
          echo "$KEY_ID:6:" | gpg --import-ownertrust
          gpg --list-secret-keys --keyid-format LONG
          echo "key_id=$KEY_ID" >> $GITHUB_OUTPUT

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Publish sketch to local Maven
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          KEY_ID: ${{ steps.gpg.outputs.key_id }}
        run: |
          ./gradlew :sketch:publishToMavenLocal \
          -Psigning.gnupg.useLoopbackPinentry=true \
          -Psigning.gnupg.keyName=$KEY_ID \
          -Psigning.gnupg.passphrase=$GPG_PASSPHRASE

      - name: Build app using published sketch
        run: ./gradlew :sketch:publishToMavenLocal
